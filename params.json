{"name":"Rabbitmq-consumer-template","tagline":"","body":"<a href=\"../../../../pages/adoption/rabbitmq-consumer-template/javadocs/index.html\" target=\"_blank\" >\r\n\t<img height=\"50px\" width=\"100px\" src=\"images/javadoc.png\" alt=\"view javadoc\"></a>\r\n&nbsp;\r\n<a href=\"../../../../pages/adoption/rabbitmq-consumer-template\" target=\"_blank\">\r\n\t<img height=\"50px\" width=\"100px\" src=\"images/pages.jpg\" alt=\"view github pages\">\r\n</a>\r\n\r\nWhat is this Project?\r\n\r\n   This project is a RabbitMQ consumer template which has RabbitMQ template, connectionfactory, message converters pre-configured for the end-users to focus on writing their business logic.\r\n\r\n   Also, the consumer side code is configured with retry from the queue for 3 attempts. If unsuccessful, the payload will be queued to an error queue for later debugging.\r\n\r\n\r\nSteps to run this project\r\n\r\n1) mvn clean package \r\n\t\r\n\r\n2) Start rabbitmqserver\t\t\r\n\r\n\t\trabbitmq-server\r\n\r\n3) Rabbitmq server will listen typically on 5672 and rabbitmq administration will listen typically on 15672\r\n\t\r\n\t\tGo to the following rabbitmq administration web page: \r\n\t\t\t\r\n\t\thttp://localhost:15672\r\n\r\n\t\tlogin as guest/guest\r\n\r\n4) Run the Dispatcherq consumer code as follows:\r\n\r\n\r\n\tjava -jar target/dispatcher-q-1.0-SNAPSHOT.jar --port=<rabbitmq server port> --server=<rabbitmq server host> --mainq=<rabbitmq main queue name> --errorq=<rabbitmq error queue name> --dispatcherhost=<server/hostname only where insight service is running> --dispatcherport=<server port where insight service is listening>\r\n\r\n\teg: java -jar target/dispatcher-q-1.0-SNAPSHOT.jar --port=5672 --server=localhost --mainq=fieldchangedeventMainQ --errorq=fieldchangedeventErrorQ --dispatcherhost=localhost --dispatcherport=19090 \r\n\r\n5) To run integration tests\r\n\t\r\n\tmvn clean install -P testharness    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}